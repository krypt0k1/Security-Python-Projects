# Cybersecurity Projects


Python Projects:
* Fernet Ransomware 

What is Fernet?

Fernet encryption is a type of symmetric encryption that is used to protect the confidentiality and integrity of data. It is a high-level encryption system that uses a shared secret key between the sender and the recipient to encrypt and decrypt the data. Fernet encryption is a part of the cryptography library in Python, and it is built on top of the Advanced Encryption Standard (AES) algorithm (128 bit encryption).

To implement Fernet encryption in a real-world scenario, you would first need to generate a secret key that is used to encrypt and decrypt the data. This secret key should be kept secure and only shared with authorized parties. Once you have generated the key, you can use it to encrypt any sensitive data that you want to protect.

For example, if you are building a web application that collects sensitive user data such as login credentials or credit card information, you can use Fernet encryption to protect this data. When a user submits their data, your application can encrypt it using the secret key before storing it in a database. Later, when the user needs to access their data, the application can use the same secret key to decrypt the data and present it back to the user in its original form.

Fernet encryption can also be used for secure communication between two parties. For instance, if you are building a messaging application, you can use Fernet encryption to encrypt the messages that are sent between the users. The sender can encrypt the message using the secret key and send it to the recipient. The recipient can then decrypt the message using the same secret key and read it in its original form. Overall, Fernet encryption is a powerful tool that can help to protect sensitive data in a variety of real-world scenarios.

In this scenario, we will utilize Fernet to encrypt files in a directory to demonstrate how a ransomware malware would work. 

First lets look at at an example of encrpytion with Fernet:

# Import module
>>> from cryptography.fernet import Fernet
# Generate key
>>> key = Fernet.generate_key()
>>> key
'Qk_GF82vx2qPBiF91n238Mp5HeAlgYpC90NB9PGEB_0='
>>> f = Fernet(key)
# Encrypt
>>> token = f.encrypt(b"Hello 8gwifi.org")
>>> token
'gAAAAABf1ecawfmsxp0S80m5LxV4md9Vf4lO7N-P9jQ08de_oLb5382Aqf7aGEof23E6N0WYPyhJkvhT1dDJJU4tdAFAhqnK-uiOoSu1T5P6XZLPcU90Rn0='
# Decrypt
>>> f.decrypt(token)
'Hello 8gwifi.org'

source: https://8gwifi.org/fernet.jsp


